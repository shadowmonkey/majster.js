(function(){var WebSocketFacade,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++)if(i in this&&this[i]===item)return i;return-1};WebSocketFacade=function(){function WebSocketFacade(){}var check,websockets;return websockets=[],WebSocketFacade.prototype.send=function(name,object){if(check(name),!websockets[name].started)throw"Websocket "+name+" is closed";return websockets[name].websocket.send(object),this},WebSocketFacade.prototype.start=function(name){var connection;if(check(name),websockets[name].started)throw"Websocket "+name+" already started";return connection=new WebSocket(websockets[name].url,websockets[name].protocols),websockets[name].open&&"[object Function]"==={}.toString.call(websockets[name].open)&&(connection.onopen=function(){return websockets[name].started=!0,websockets[name].open()}),websockets[name].message&&"[object Function]"==={}.toString.call(websockets[name].message)&&(connection.onmessage=websockets[name].message),websockets[name].error&&"[object Function]"==={}.toString.call(websockets[name].error)&&(connection.onerror=websockets[name].error),websockets[name].close&&"[object Function]"==={}.toString.call(websockets[name].close)&&(connection.onclose=function(){return websockets[name].started=!1,websockets[name].close()}),websockets[name].websocket=connection,this},WebSocketFacade.prototype.close=function(name){if(check(name),!websockets[name].started)throw"Websocket "+name+" is closed already";return websockets[name].websocket.close(),this},WebSocketFacade.prototype.get=function(name){return check(name),websockets[name]},WebSocketFacade.prototype.define=function(name,url,protocols){var action,ref;if(ref=!1,indexOf.call(window,ref)>=0)throw"WebSocket is not supported by browser";if(null!=websockets[name])throw"Websocket "+name+" is already defined";return websockets[name]={url:url,protocols:protocols,started:!1},action={on:function(name,callback){switch(name){case"open":action.open(callback);break;case"message":action.message(callback);break;case"close":action.close(callback);break;case"error":action.error(callback);break;default:throw"Action "+name+" not found on $websocket"}return action},open:function(callback){return websockets[name].open=callback,action},message:function(callback){return websockets[name].message=callback,action},close:function(callback){return websockets[name].close=callback,action},error:function(callback){return websockets[name].error=callback,action}}},check=function(name){if(null==name)throw"Name parameters is missing";if(null==websockets[name])throw"Can't find websocket "+name},WebSocketFacade}(),app.set("$websocket",new WebsocketFacade)}).call(this);